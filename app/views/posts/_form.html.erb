<%= form_with(model: post) do |form| %>
  <% if post.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(post.errors.count, "error") %> prohibited this post from being saved:</h2>

      <ul>
        <% post.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <br/><br/>

  <div style="display: flex; align-items: flex-start">
    <div style="flex: 1; margin-right: 10px">
      <input class="form-control" name="tags_string" type="text_area" style="rows: 1" placeholder="tag0, tag1, .‧₊˚ ⋅* ‧₊·˚°.‧₊˚ ⋅* ‧₊·˚* ‧ˎˊ˗">
    </div>
    <div style="float: right">
      <%= form.collection_select :category_id, @categories, :id, :name, { disabled: -> (category) { category.id == 0 } }, { class:"form-select", selected: 2, style:"background-color: white; margin-right: 5px; border-radius: 5px; border: 1px gray" } %>
    </div>
  </div>
  <br/>
  <div class="mb-3">
    <%= form.text_area :title, rows: 2, class:"form-control", placeholder:"Title..." %>
  </div>

  <div class="mb-3">
    <%= form.text_area :contents, contenteditable:"true", id: "post_content", class:"form-control", rows: 16, placeholder:"contents..." %>
  </div>

  <div class="row mb-3">
    <%= form.file_field :images, onchange:"return updateFiles()", multiple: true, class:"col-sm-10" %>
  </div>
  <ul id="file-list"></ul>

  <div class="form-check form-switch" style="text-align: right; display: flex; justify-content: flex-end">
    <%= form.label :is_private, "🔒", class:"form-check-label", style:"z-index: 9999" %>
    <%= form.check_box :is_private, class:"form-check-input", role:"switch" %>
  </div>

  <div class="field form-group">
    <%= form.number_field :user_id, id: :post_user_id, class:"form-control", value: current_user.id, type: :hidden %>
  </div>

  <div class="btn-group" role="group" aria-label="Basic example">
    <%= link_to "⬅️", posts_path, class:"btn btn-outline-secondary" %>
    <%= form.submit "🔥", class:"btn btn-primary"%>
  </div>
<% end %>

<script>
    function updateFiles() {
      var files = event.target.files;
      var fileList = document.getElementById('file-list');

      for (var i = 0; i < files.length; i++) {
        var file = files[i];
        var listItem = document.createElement('li');
        listItem.textContent = file.name;

        // Create a delete button
        var deleteButton = document.createElement('button');
        deleteButton.textContent = 'X';
        deleteButton.addEventListener('click', createDeleteHandler(file, listItem));

        listItem.appendChild(deleteButton);
        fileList.appendChild(listItem);

        // Read the file and display a preview
        var reader = new FileReader();
        reader.onload = (function(file) {
          return function(e) {
            // var preview = document.createElement('img');
            // preview.src = e.target.result;
            // preview.classList.add('preview');
            listItem.insertBefore(deleteButton);
          };
        })(file);
        reader.readAsDataURL(file);
      }
    }

    function createDeleteHandler(file, listItem) {
      return function() {
        // Remove the file from the list
        listItem.remove();

        // Handle additional logic for file deletion
        // For example, you can update the server-side record or perform other actions.
      };
    } 
</script>
